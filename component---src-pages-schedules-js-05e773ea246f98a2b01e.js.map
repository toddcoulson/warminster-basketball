{"version":3,"file":"component---src-pages-schedules-js-05e773ea246f98a2b01e.js","mappings":"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","sources":["webpack://gatsby-starter-hello-world/./src/components/Layout.js","webpack://gatsby-starter-hello-world/./src/components/DropDown.js","webpack://gatsby-starter-hello-world/./src/styles/events.module.css","webpack://gatsby-starter-hello-world/./src/pages/schedules.js"],"sourcesContent":["import React from 'react'\nimport Navbar from './Navbar'\nimport Footer from './Footer'\n\nimport '../styles/global.css'\n\nexport default function Layout({children}){\n  return (\n    <>\n    <Navbar />\n    <div className=\"layout\">\n      \n      <div className='content'>\n        {children}\n      </div>\n    </div>\n    <Footer />\n    </>\n  )\n}","import React from 'react';\nconst DropDown = ({ trigger, menu }) => {\n  const [open, setOpen] = React.useState(false);\n\n  const handleOpen = () => {\n    setOpen(!open);\n  };\n\n  return (\n    <div className=\"dropdown\">\n      {React.cloneElement(trigger, {\n        onClick: handleOpen,\n      })}\n      {open ? (\n        <ul className=\"menu\">\n          {menu.map((menuItem, index) => (\n            <li key={index} className=\"menu-item\">\n              {React.cloneElement(menuItem, {\n                onClick: () => {\n                  menuItem.props.onClick();\n                  setOpen(false);\n                },\n              })}\n            </li>\n          ))}\n        </ul>\n      ) : null}\n    </div>\n  );\n};\nexport default DropDown","// extracted by mini-css-extract-plugin\nexport var containAll = \"events-module--containAll--7edd9\";\nexport var displayEvents = \"events-module--displayEvents--c906b\";\nexport var gameCell = \"events-module--gameCell--acbc0\";\nexport var gameHeaderCell = \"events-module--gameHeaderCell--7048b\";\nexport var gameHeaderRow = \"events-module--gameHeaderRow--4b5f0\";\nexport var gameRow = \"events-module--gameRow--8407d\";","import * as React from \"react\"\nimport Layout from \"../components/Layout\"\nimport { graphql } from \"gatsby\"\nimport DropDown from '../components/DropDown';\nimport * as styles from '../styles/events.module.css';\n\nexport default function Information({data}) {\n  const [events, setEvents] = React.useState([])\n  const compareDates = (a, b) => {\n    if (a.dateTime < b.dateTime) { return -1; }\n    if (a.dateTime > b.dateTime) { return 1; }\n    return 0;\n}\n  const handleGirls8Travel = () => {\n    const filterIt = data.allContentfulGame.nodes.sort(compareDates).filter(val =>{\n      return val.gameType === 'girls8travel'\n    })\n    setEvents([...filterIt])\n  };\n\n  const handleGirls8Intra = () => {\n    const filterIt = data.allContentfulGame.nodes.sort(compareDates).filter(val =>{\n      return val.gameType === 'girls8intra'\n    })\n    setEvents([...filterIt])\n  };\n  const handleBoys8Travel = () => {\n    const filterIt = data.allContentfulGame.nodes.sort(compareDates).filter(val =>{\n      return val.gameType === 'boys8travel'\n    })\n    setEvents([...filterIt])\n  };\n\n  const handleBoys8Intra = () => {\n    const filterIt = data.allContentfulGame.nodes.sort(compareDates).filter(val =>{\n      return val.gameType === 'boys8intra'\n    })\n\n    setEvents([...filterIt])\n  };\n  const formatDate = (val)=>{\n    const date = new Date(val);\n    let dStr = date.toLocaleDateString(\"en-US\");\n    dStr += ' '+(\"00\" + (date.getHours()%12)).slice(-2)+':'+(\"00\" + date.getMinutes()).slice(-2)+' ';\n    date.getHours()>11 ? dStr += 'PM' : dStr += 'AM'\n    return dStr;\n  }\n\n  const checkPastGame = (obj) => {\n    const ckDate = new Date(obj.dateTime);\n    const today = new Date();\n    return today > ckDate;\n  }\n  \n  return <>\n  <Layout>\n  <div id={styles.containAll}>\n  <div id='dropContain'>\n    <DropDown\n      trigger={<button>Teams</button>}\n      menu={[\n        <button onClick={handleGirls8Travel}>Girls 8-9</button>,\n        <button onClick={handleBoys8Travel}>Boys 8-9</button>,\n      ]}\n    />\n    <DropDown\n      trigger={<button>Leagues</button>}\n      menu={[\n        <button onClick={handleGirls8Intra}>Girls 8-9</button>,\n        <button onClick={handleBoys8Intra}>Boys 8-9</button>,\n      ]}\n    />\n  </div>\n  <div id={styles.displayEvents}>\n  <div className={styles.gameHeaderRow} key='head'>\n      <div className={styles.gameHeaderCell +' '+styles.dateTime}>Date Time</div>\n      <div className={styles.gameHeaderCell +' '+styles.dateTimelocation}>Location/Score</div> \n        \n      <div className={styles.gameHeaderCell +' '+styles.opponent}>Teams</div>\n      <div className={styles.gameHeaderCell +' '+styles.details}>Details</div>\n    </div>\n  {events.map((event, i) => \n    <div className={styles.gameRow} key={i}>\n      <div className={styles.gameCell +' '+styles.dateTime}>{formatDate(event.dateTime)}</div>\n      {\n        !checkPastGame(event)? \n        <div className={styles.gameCell +' '+styles.dateTimelocation}><a href={`https://www.google.pl/maps/place/${event.location.lat},${event.location.lon}/@${event.location.lat},${event.location.lon},15z`} target=\"_blank\">Google Map</a></div> : \n        <div className={styles.gameCell +' '+styles.score}>{event.score}</div>\n      }\n      <div className={styles.gameCell +' '+styles.opponent}>{event.awayTeam} vs. {event.homeTeam}</div>\n      <div className={styles.gameCell +' '+styles.details}>{event.details.details}</div>\n    </div>\n  )}\n  </div>\n  </div>\n</Layout>\n  </>\n}\nexport const query = graphql`\nquery schedulesPage {\n  allContentfulGame {\n    nodes {\n      dateTime\n      id\n      details {\n        details\n      }\n      location {\n        lat\n        lon\n      }\n      gameType\n      homeTeam\n      awayTeam\n      contentful_id\n      score\n    }\n  }\n}\n`"],"names":["Layout","_ref","children","React","Navbar","className","Footer","trigger","menu","open","setOpen","onClick","handleOpen","map","menuItem","index","key","props","containAll","displayEvents","gameCell","gameHeaderCell","gameHeaderRow","gameRow","Information","data","events","setEvents","compareDates","a","b","dateTime","id","styles","DropDown","handleGirls8Travel","filterIt","allContentfulGame","nodes","sort","filter","val","gameType","_toConsumableArray","handleBoys8Travel","handleGirls8Intra","handleBoys8Intra","event","i","date","Date","dStr","toLocaleDateString","getHours","slice","getMinutes","formatDate","obj","ckDate","checkPastGame","score","href","location","lat","lon","target","awayTeam","homeTeam","details"],"sourceRoot":""}